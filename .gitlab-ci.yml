stages:
  - test
  - build
  - publish
  - deploy

variables:
  POSTGRES_HOST_AUTH_METHOD: trust
  DOCKER_COMPOSE_PATH: "/apps/docker"

.stage:
  image: outils-patrinat.mnhn.fr/nexus/java-ci:jdk15-gradle6.8.0
  only:
    - main@biom/diversity
  cache:
    key:
      files:
        - build.gradle
    paths:
      - admin/node_modules
      - frontend/node_modules
      - backernd/build
      - .gradle
  before_script:
    - "which ssh-agent || ( apt update && apt install openssh-client -y )"
    - eval $(ssh-agent -s)
    - 'id gitlab-runner || (useradd gitlab-runner && mkdir /home/gitlab-runner && chown -R gitlab-runner:gitlab-runner /home/gitlab-runner)'
    - dir=$(pwd)
    - chown -R gitlab-runner:gitlab-runner $dir
    - su gitlab-runner -c "cd $dir"
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - git config --global user.email "gitlab-ci@mnhn.fr"
    - git config --global user.name "gitlab-ci"


test:
  tags:
    - gradle
  stage: test
  image: circleci/openjdk:11-browsers
  except:
    - main@biom/diversity
  services:
    - name: postgres:12.2-alpine
      alias: postgres
    - name: mailhog/mailhog@sha256:98c7e2e6621c897ad86f31610d756d76b8ee622c354c28a76f4ed49fb6ed996f
      alias: mailhog
  script:
    - sudo apt-get update
    - sudo apt-get install -y postgresql-client
    - psql -h postgres -U postgres -f backend/database/setup/database.sql
    - sudo ./gradlew check build --no-daemon -PCI=true

build:
  tags:
    - gradle
  stage: build
  extends: .stage
  script:
    - su gitlab-runner -c "gradle --build-cache assemble"

.publish_docker:
  stage: publish
  extends: .stage
  tags:
    - gradle
  script:
    - su gitlab-runner -c "gradle --build-cache assemble"
    - su gitlab-runner -c "gradle -PdockerEnvironmentTag='$ENV_TAG' -PdockerUsername='$NEXUS_CREDS_USR' -PdockerPassword='$NEXUS_CREDS_PSW' -DsendCredentialsOverHttp=true jib"

publish_test:
  only:
    - dev@biom/diversity
  variables:
    ENV_TAG: "test"
  extends: .publish_docker

publish_preprod:
  only:
    - /^release/.*$/@biom/diversity
  variables:
    ENV_TAG: "release"
  extends: .publish_docker

.publish_prod:
  only:
    - main@biom/diversity
  variables:
    ENV_TAG: "prod"
  extends: .publish_docker

.prepare:
  extends: .stage
  script:
    - ssh-add <(echo "$PATRINAT_CI_SSH_KEY")
    - touch  ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh-keyscan -v "$SERVER_URL" >> ~/.ssh/known_hosts
    - cd ~
    - git clone git@ic-prod1.patnat.mnhn.fr:biom/biom-backup.git
    - cd biom-backup
    - git checkout $BRANCH_NAME
    - ssh -o stricthostkeychecking=no $PATRINAT_CI_USER@"$SERVER_URL" mkdir -p /apps/postgresql
    - scp -r $SERVER_URL@"$PATRINAT_CI_USER":~/biom-backup/docker /apps/
    - scp -r $SERVER_URL@"$PATRINAT_CI_USER":~/biom-backup/postgresql/setup /apps/postgresql/
    - (ssh -o stricthostkeychecking=no $PATRINAT_CI_USER@"$SERVER_URL" test -d /apps/postgresql/data)
        || scp -r $SERVER_URL@"$PATRINAT_CI_USER":~/biom-backup/ /apps/diversity


.deploy:
  stage: deploy
  tags:
    - gradle
  extends: .prepare
  script:
    - ssh -o stricthostkeychecking=no $PATRINAT_CI_USER@"$SERVER_URL" sudo docker-compose -f $DOCKER_COMPOSE_PATH/docker-compose.yml down -v
    - ssh -o stricthostkeychecking=no $PATRINAT_CI_USER@"$SERVER_URL" sudo docker-compose -f $DOCKER_COMPOSE_PATH/docker-compose.yml pull
    - ssh -o stricthostkeychecking=no $PATRINAT_CI_USER@"$SERVER_URL" sudo docker-compose -f $DOCKER_COMPOSE_PATH/docker-compose.yml up -d

deploy-test:
  only:
    - dev@biom/diversity
  environment:
    name: test
    url: https://"$BIOM_TEST_SERVER_URL"
  variables:
    SERVER_URL: $BIOM_TEST_SERVER_URL
    BRANCH_NAME: "dev"
  extends: .deploy

deploy-preprod:
  only:
    - /^release/.*$/@biom/diversity
  environment:
    name: preprod
    url: https://"$BIOM_PREPROD_SERVER_URL"
  variables:
    SERVER_URL: $BIOM_PREPROD_SERVER_URL
    BRANCH_NAME: "release"
  extends: .deploy

deploy-prod:
  only:
    - main@biom/diversity
  environment:
    name: prod
    url: https://"$BIOM_PROD_SERVER_URL"
  variables:
    SERVER_URL: $BIOM_PROD_SERVER_URL
    BRANCH_NAME: "prod"
  extends: .deploy
